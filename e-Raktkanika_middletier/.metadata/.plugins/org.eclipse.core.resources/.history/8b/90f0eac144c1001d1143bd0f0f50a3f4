package com.example.demo.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entities.Address;
import com.example.demo.entities.Advertisement;
import com.example.demo.entities.BloodBank;
import com.example.demo.entities.Camp;
import com.example.demo.entities.CampReg;
import com.example.demo.entities.Organization;
import com.example.demo.entities.Selected_bloodbanks;
import com.example.demo.services.AddressService;
import com.example.demo.services.AdvertisementService;
import com.example.demo.services.BloodBankService;
import com.example.demo.services.CampService;
import com.example.demo.services.OrganizationService;
import com.example.demo.services.Selected_bloodbanksService;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
public class CampController {
	
	@Autowired
	OrganizationService oservice;
	
	@Autowired 
	CampService cservice;
	
	@Autowired
	AddressService aservice;
	
	@Autowired
	BloodBankService bservice;
	
	@Autowired
	Selected_bloodbanksService sbbservice;
	
	@Autowired
	AdvertisementService adservice;
	
	
	@PostMapping("/regcamp")
	public Camp regCamp (@RequestBody CampReg cr)
	{
		Address a = new Address(cr.getArea(),cr.getCity(),cr.getPincode());	
		
		Address saved1 = aservice.saveAddress(a);
		Organization os = oservice.getOrgById(cr.getOrg_id());
		
		Camp c = new Camp(cr.getCname(),cr.getCdate(),cr.getCtime(),a,os);
		


		Camp savedc=cservice.Save(c);
		
		Selected_bloodbanks sb=null;
				for(int i=0;i<cr.getSel_bb().length;i++)
		{
			System.out.println(cr.getSel_bb()[i]);
			
			BloodBank bb = bservice.getById(cr.getSel_bb()[i]);
			
			System.out.println(bb);
			sb=new Selected_bloodbanks(savedc,bb);
			
			sbbservice.saveSbb(sb);
			System.out.println(sbbservice.saveSbb(sb));
			
		}
		
		
		System.out.println(c);
		return cservice.Save(c);
		
		
	}
	
	@GetMapping("/getcamps")
	public List<Selected_bloodbanks> getCamps(int cid)
	{
		return sbbservice.getCamps();
	}
	
	@GetMapping("/getc")
	public List<Selected_bloodbanks> getC(int cid)
	{
		return sbbservice.getC(cid);
	}
	

}
